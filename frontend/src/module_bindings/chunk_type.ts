// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
import {
  AlgebraicType as __AlgebraicTypeValue,
  BinaryReader as __BinaryReader,
  BinaryWriter as __BinaryWriter,
  ClientCache as __ClientCache,
  ConnectionId as __ConnectionId,
  DbConnectionBuilder as __DbConnectionBuilder,
  DbConnectionImpl as __DbConnectionImpl,
  Identity as __Identity,
  SubscriptionBuilderImpl as __SubscriptionBuilderImpl,
  TableCache as __TableCache,
  TimeDuration as __TimeDuration,
  Timestamp as __Timestamp,
  deepEqual as __deepEqual,
  type AlgebraicType as __AlgebraicTypeType,
  type AlgebraicTypeVariants as __AlgebraicTypeVariants,
  type CallReducerFlags as __CallReducerFlags,
  type ErrorContextInterface as __ErrorContextInterface,
  type Event as __Event,
  type EventContextInterface as __EventContextInterface,
  type ReducerEventContextInterface as __ReducerEventContextInterface,
  type SubscriptionEventContextInterface as __SubscriptionEventContextInterface,
} from "spacetimedb";
import { Vector3 } from "./vector_3_type";
// Mark import as potentially unused
declare type __keep_Vector3 = Vector3;


export type Chunk = {
  id: string,
  projectId: string,
  layerId: string,
  startX: number,
  startZ: number,
  dimensions: Vector3,
  voxels: Uint8Array,
};
/**
 * An object for generated helper functions.
 */
export const Chunk = {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  getTypeScriptAlgebraicType(): __AlgebraicTypeType {
    return __AlgebraicTypeValue.Product({
      elements: [
        { name: "id", algebraicType: __AlgebraicTypeValue.String},
        { name: "projectId", algebraicType: __AlgebraicTypeValue.String},
        { name: "layerId", algebraicType: __AlgebraicTypeValue.String},
        { name: "startX", algebraicType: __AlgebraicTypeValue.I32},
        { name: "startZ", algebraicType: __AlgebraicTypeValue.I32},
        { name: "dimensions", algebraicType: Vector3.getTypeScriptAlgebraicType()},
        { name: "voxels", algebraicType: __AlgebraicTypeValue.Array(__AlgebraicTypeValue.U8)},
      ]
    });
  },

  serialize(writer: __BinaryWriter, value: Chunk): void {
    __AlgebraicTypeValue.serializeValue(writer, Chunk.getTypeScriptAlgebraicType(), value);
  },

  deserialize(reader: __BinaryReader): Chunk {
    return __AlgebraicTypeValue.deserializeValue(reader, Chunk.getTypeScriptAlgebraicType());
  },

}

export default Chunk;


