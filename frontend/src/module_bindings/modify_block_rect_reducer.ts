// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  CallReducerFlags,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  DbContext,
  ErrorContextInterface,
  Event,
  EventContextInterface,
  Identity,
  ProductType,
  ProductTypeElement,
  ReducerEventContextInterface,
  SubscriptionBuilderImpl,
  SubscriptionEventContextInterface,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
} from "@clockworklabs/spacetimedb-sdk";

import { BlockModificationMode as __BlockModificationMode } from "./block_modification_mode_type";
import { MeshType as __MeshType } from "./mesh_type_type";

export type ModifyBlockRect = {
  world: string,
  mode: __BlockModificationMode,
  type: __MeshType,
  x1: number,
  y1: number,
  z1: number,
  x2: number,
  y2: number,
  z2: number,
  isPreview: boolean,
};

/**
 * A namespace for generated helper functions.
 */
export namespace ModifyBlockRect {
  /**
  * A function which returns this type represented as an AlgebraicType.
  * This function is derived from the AlgebraicType used to generate this type.
  */
  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createProductType([
      new ProductTypeElement("world", AlgebraicType.createStringType()),
      new ProductTypeElement("mode", __BlockModificationMode.getTypeScriptAlgebraicType()),
      new ProductTypeElement("type", __MeshType.getTypeScriptAlgebraicType()),
      new ProductTypeElement("x1", AlgebraicType.createI32Type()),
      new ProductTypeElement("y1", AlgebraicType.createI32Type()),
      new ProductTypeElement("z1", AlgebraicType.createI32Type()),
      new ProductTypeElement("x2", AlgebraicType.createI32Type()),
      new ProductTypeElement("y2", AlgebraicType.createI32Type()),
      new ProductTypeElement("z2", AlgebraicType.createI32Type()),
      new ProductTypeElement("isPreview", AlgebraicType.createBoolType()),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: ModifyBlockRect): void {
    ModifyBlockRect.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): ModifyBlockRect {
    return ModifyBlockRect.getTypeScriptAlgebraicType().deserialize(reader);
  }

}

